# [START cloudbuild]
steps:

#   # This step runs the unit tests on the app
# - name: 'python:3.7-slim'
#   id: Test APP
#   entrypoint: /bin/sh
#   args:
#   - -c
#   - 'pip install --trusted-host pypi.python.org -r src/requirements.txt && python src/test.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Docker Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/htmrt-backend:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push Docker Image
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/htmrt-backend:$SHORT_SHA'

- name: 'gcr.io/cloud-builders/git'
  id: Clone Environment Project
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      git clone https://github.com/marcusrodmag/htmrt.git && \
      cd htmrt
      git checkout init  && \
      git pull  && \
      ls -lha && \
      set -x && \
      git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest for Backend
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest for k8s
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes-manifests/htmrt-backend.deployment.yaml.template| \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > htmrt/kubernetes/htmrt-backend.deployment.yaml && \
     cat htmrt/kubernetes/htmrt-backend.deployment.yaml

# This step deploys the new version of our container image
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy to kubernetes
  args:
  - 'apply'
  - '-f'
  - 'htmrt/kubernetes/htmrt-backend.deployment.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=htmrt-dev'

- name: 'gcr.io/cloud-builders/gcloud'
  id: Decript MKS SSH key for github
  args:
  - kms
  - decrypt
  - --ciphertext-file=htmrt/key/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=rtmrt-keyring
  - --key=github-rtmrt-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- name: 'gcr.io/cloud-builders/git'
  id: List environment project
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      pwd && \
      ls -lha htmrt/
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- name: 'gcr.io/cloud-builders/git'
  id: Commit do GIT
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    ssh-keyscan -t rsa github.com > known_hosts && \
    # Configure Git to create commits with Cloud Build's service account
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    # Switch to the production branch and copy the kubernetes.yaml file from the candidate branch
    cd htmrt && \
    ls -lha && \
    git add . && \
    git commit -m "Manifest from commit $COMMIT_SHA" && \
    $(git log --format=%B -n 1 $COMMIT_SHA)" && \
    git push origin init
  volumes:
  - name: 'ssh'
    path: /root/.ssh
# [END cloudbuild]
