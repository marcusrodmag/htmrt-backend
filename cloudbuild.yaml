# [START cloudbuild]
steps:

#   # This step runs the unit tests on the app
# - name: 'python:3.7-slim'
#   id: Test
#   entrypoint: /bin/sh
#   args:
#   - -c
#   - 'pip install --trusted-host pypi.python.org -r src/requirements.txt && python src/test.py -v'

# # This step builds the container image.
# - name: 'gcr.io/cloud-builders/docker'
#   id: Build
#   args:
#   - 'build'
#   - '-t'
#   - 'gcr.io/$PROJECT_ID/htmrt-backend:$SHORT_SHA'
#   - '.'

# # This step pushes the image to Container Registry
# # The PROJECT_ID and SHORT_SHA variables are automatically
# # replaced by Cloud Build.
# - name: 'gcr.io/cloud-builders/docker'
#   id: Push
#   args:
#   - 'push'
#   - 'gcr.io/$PROJECT_ID/htmrt-backend:$SHORT_SHA'

- name: 'gcr.io/cloud-builders/git'
  id: List
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      ls -lha


# This step generates the new manifest for Backend
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes-manifests/htmrt-backend.deployment.yaml.template| \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > htmrt/kubernetes/htmrt-backend.deployment.yaml

- name: 'gcr.io/cloud-builders/git'
  id: Clone Environment Project
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      git clone -b init https://github.com/marcusrodmag/htmrt.git && \
      cd htmrt && \
      ls -lha && \
      set -x && \
      git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')


# - name: 'gcr.io/cloud-builders/git'
#   id: Copy to production branch
#   entrypoint: /bin/sh
#   args:
#   - '-c'
#   - |
#     set -x && \
#     # Configure Git to create commits with Cloud Build's service account
#     git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
#     # Switch to the production branch and copy the kubernetes.yaml file from the candidate branch
#     git fetch origin init && git checkout init && \
#     git checkout $COMMIT_SHA kubernetes/backend.yml.template && \
#     # Commit the kubernetes.yaml file with a descriptive commit message
#     git commit -m "Manifest from commit $COMMIT_SHA" && \
#     $(git log --format=%B -n 1 $COMMIT_SHA)" && \
#     # Push the changes back to Cloud Source Repository
#     git push origin init
# [END cloudbuild]
